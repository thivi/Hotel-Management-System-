#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HotelManagement")]
public partial class HotelManDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAdvanceBill(AdvanceBill instance);
  partial void UpdateAdvanceBill(AdvanceBill instance);
  partial void DeleteAdvanceBill(AdvanceBill instance);
  partial void InsertRoom(Room instance);
  partial void UpdateRoom(Room instance);
  partial void DeleteRoom(Room instance);
  partial void InsertAdvanceBillHall(AdvanceBillHall instance);
  partial void UpdateAdvanceBillHall(AdvanceBillHall instance);
  partial void DeleteAdvanceBillHall(AdvanceBillHall instance);
  partial void InsertAdvanceBillRoom(AdvanceBillRoom instance);
  partial void UpdateAdvanceBillRoom(AdvanceBillRoom instance);
  partial void DeleteAdvanceBillRoom(AdvanceBillRoom instance);
  partial void InsertCustomer(Customer instance);
  partial void UpdateCustomer(Customer instance);
  partial void DeleteCustomer(Customer instance);
  partial void InsertFinalBill(FinalBill instance);
  partial void UpdateFinalBill(FinalBill instance);
  partial void DeleteFinalBill(FinalBill instance);
  partial void InsertFunctionPack(FunctionPack instance);
  partial void UpdateFunctionPack(FunctionPack instance);
  partial void DeleteFunctionPack(FunctionPack instance);
  partial void InsertHallBooking(HallBooking instance);
  partial void UpdateHallBooking(HallBooking instance);
  partial void DeleteHallBooking(HallBooking instance);
  partial void InsertHall(Hall instance);
  partial void UpdateHall(Hall instance);
  partial void DeleteHall(Hall instance);
  partial void InsertMealPackage(MealPackage instance);
  partial void UpdateMealPackage(MealPackage instance);
  partial void DeleteMealPackage(MealPackage instance);
  partial void InsertRoomBooking(RoomBooking instance);
  partial void UpdateRoomBooking(RoomBooking instance);
  partial void DeleteRoomBooking(RoomBooking instance);
  #endregion
	
	public HotelManDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HotelManagementConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public HotelManDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HotelManDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HotelManDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HotelManDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<AdvanceBill> AdvanceBills
	{
		get
		{
			return this.GetTable<AdvanceBill>();
		}
	}
	
	public System.Data.Linq.Table<Room> Rooms
	{
		get
		{
			return this.GetTable<Room>();
		}
	}
	
	public System.Data.Linq.Table<AdvanceBillHall> AdvanceBillHalls
	{
		get
		{
			return this.GetTable<AdvanceBillHall>();
		}
	}
	
	public System.Data.Linq.Table<AdvanceBillRoom> AdvanceBillRooms
	{
		get
		{
			return this.GetTable<AdvanceBillRoom>();
		}
	}
	
	public System.Data.Linq.Table<Customer> Customers
	{
		get
		{
			return this.GetTable<Customer>();
		}
	}
	
	public System.Data.Linq.Table<FinalBill> FinalBills
	{
		get
		{
			return this.GetTable<FinalBill>();
		}
	}
	
	public System.Data.Linq.Table<FunctionPack> FunctionPacks
	{
		get
		{
			return this.GetTable<FunctionPack>();
		}
	}
	
	public System.Data.Linq.Table<HallBooking> HallBookings
	{
		get
		{
			return this.GetTable<HallBooking>();
		}
	}
	
	public System.Data.Linq.Table<Hall> Halls
	{
		get
		{
			return this.GetTable<Hall>();
		}
	}
	
	public System.Data.Linq.Table<MealPackage> MealPackages
	{
		get
		{
			return this.GetTable<MealPackage>();
		}
	}
	
	public System.Data.Linq.Table<RoomBooking> RoomBookings
	{
		get
		{
			return this.GetTable<RoomBooking>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvanceBill")]
public partial class AdvanceBill : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BillID;
	
	private System.Nullable<System.DateTime> _BillDate;
	
	private System.Nullable<int> _CustID;
	
	private System.Nullable<double> _TotalAmount;
	
	private System.Nullable<double> _AdvanceAmount;
	
	private EntitySet<AdvanceBillHall> _AdvanceBillHalls;
	
	private EntitySet<AdvanceBillRoom> _AdvanceBillRooms;
	
	private EntitySet<FinalBill> _FinalBills;
	
	private EntityRef<Customer> _Customer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIDChanging(int value);
    partial void OnBillIDChanged();
    partial void OnBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateChanged();
    partial void OnCustIDChanging(System.Nullable<int> value);
    partial void OnCustIDChanged();
    partial void OnTotalAmountChanging(System.Nullable<double> value);
    partial void OnTotalAmountChanged();
    partial void OnAdvanceAmountChanging(System.Nullable<double> value);
    partial void OnAdvanceAmountChanged();
    #endregion
	
	public AdvanceBill()
	{
		this._AdvanceBillHalls = new EntitySet<AdvanceBillHall>(new Action<AdvanceBillHall>(this.attach_AdvanceBillHalls), new Action<AdvanceBillHall>(this.detach_AdvanceBillHalls));
		this._AdvanceBillRooms = new EntitySet<AdvanceBillRoom>(new Action<AdvanceBillRoom>(this.attach_AdvanceBillRooms), new Action<AdvanceBillRoom>(this.detach_AdvanceBillRooms));
		this._FinalBills = new EntitySet<FinalBill>(new Action<FinalBill>(this.attach_FinalBills), new Action<FinalBill>(this.detach_FinalBills));
		this._Customer = default(EntityRef<Customer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BillID
	{
		get
		{
			return this._BillID;
		}
		set
		{
			if ((this._BillID != value))
			{
				this.OnBillIDChanging(value);
				this.SendPropertyChanging();
				this._BillID = value;
				this.SendPropertyChanged("BillID");
				this.OnBillIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="Date")]
	public System.Nullable<System.DateTime> BillDate
	{
		get
		{
			return this._BillDate;
		}
		set
		{
			if ((this._BillDate != value))
			{
				this.OnBillDateChanging(value);
				this.SendPropertyChanging();
				this._BillDate = value;
				this.SendPropertyChanged("BillDate");
				this.OnBillDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", DbType="Int")]
	public System.Nullable<int> CustID
	{
		get
		{
			return this._CustID;
		}
		set
		{
			if ((this._CustID != value))
			{
				if (this._Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustIDChanging(value);
				this.SendPropertyChanging();
				this._CustID = value;
				this.SendPropertyChanged("CustID");
				this.OnCustIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Float")]
	public System.Nullable<double> TotalAmount
	{
		get
		{
			return this._TotalAmount;
		}
		set
		{
			if ((this._TotalAmount != value))
			{
				this.OnTotalAmountChanging(value);
				this.SendPropertyChanging();
				this._TotalAmount = value;
				this.SendPropertyChanged("TotalAmount");
				this.OnTotalAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceAmount", DbType="Float")]
	public System.Nullable<double> AdvanceAmount
	{
		get
		{
			return this._AdvanceAmount;
		}
		set
		{
			if ((this._AdvanceAmount != value))
			{
				this.OnAdvanceAmountChanging(value);
				this.SendPropertyChanging();
				this._AdvanceAmount = value;
				this.SendPropertyChanged("AdvanceAmount");
				this.OnAdvanceAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvanceBill_AdvanceBillHall", Storage="_AdvanceBillHalls", ThisKey="BillID", OtherKey="BillID")]
	public EntitySet<AdvanceBillHall> AdvanceBillHalls
	{
		get
		{
			return this._AdvanceBillHalls;
		}
		set
		{
			this._AdvanceBillHalls.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvanceBill_AdvanceBillRoom", Storage="_AdvanceBillRooms", ThisKey="BillID", OtherKey="BillID")]
	public EntitySet<AdvanceBillRoom> AdvanceBillRooms
	{
		get
		{
			return this._AdvanceBillRooms;
		}
		set
		{
			this._AdvanceBillRooms.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvanceBill_FinalBill", Storage="_FinalBills", ThisKey="BillID", OtherKey="AdvanceBillID")]
	public EntitySet<FinalBill> FinalBills
	{
		get
		{
			return this._FinalBills;
		}
		set
		{
			this._FinalBills.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_AdvanceBill", Storage="_Customer", ThisKey="CustID", OtherKey="CustomerID", IsForeignKey=true)]
	public Customer Customer
	{
		get
		{
			return this._Customer.Entity;
		}
		set
		{
			Customer previousValue = this._Customer.Entity;
			if (((previousValue != value) 
						|| (this._Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Customer.Entity = null;
					previousValue.AdvanceBills.Remove(this);
				}
				this._Customer.Entity = value;
				if ((value != null))
				{
					value.AdvanceBills.Add(this);
					this._CustID = value.CustomerID;
				}
				else
				{
					this._CustID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Customer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AdvanceBillHalls(AdvanceBillHall entity)
	{
		this.SendPropertyChanging();
		entity.AdvanceBill = this;
	}
	
	private void detach_AdvanceBillHalls(AdvanceBillHall entity)
	{
		this.SendPropertyChanging();
		entity.AdvanceBill = null;
	}
	
	private void attach_AdvanceBillRooms(AdvanceBillRoom entity)
	{
		this.SendPropertyChanging();
		entity.AdvanceBill = this;
	}
	
	private void detach_AdvanceBillRooms(AdvanceBillRoom entity)
	{
		this.SendPropertyChanging();
		entity.AdvanceBill = null;
	}
	
	private void attach_FinalBills(FinalBill entity)
	{
		this.SendPropertyChanging();
		entity.AdvanceBill = this;
	}
	
	private void detach_FinalBills(FinalBill entity)
	{
		this.SendPropertyChanging();
		entity.AdvanceBill = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RoomID;
	
	private string _RoomType;
	
	private System.Nullable<double> _Price;
	
	private string _RoomNo;
	
	private EntitySet<RoomBooking> _RoomBookings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomIDChanging(int value);
    partial void OnRoomIDChanged();
    partial void OnRoomTypeChanging(string value);
    partial void OnRoomTypeChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnRoomNoChanging(string value);
    partial void OnRoomNoChanged();
    #endregion
	
	public Room()
	{
		this._RoomBookings = new EntitySet<RoomBooking>(new Action<RoomBooking>(this.attach_RoomBookings), new Action<RoomBooking>(this.detach_RoomBookings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RoomID
	{
		get
		{
			return this._RoomID;
		}
		set
		{
			if ((this._RoomID != value))
			{
				this.OnRoomIDChanging(value);
				this.SendPropertyChanging();
				this._RoomID = value;
				this.SendPropertyChanged("RoomID");
				this.OnRoomIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="VarChar(255)")]
	public string RoomType
	{
		get
		{
			return this._RoomType;
		}
		set
		{
			if ((this._RoomType != value))
			{
				this.OnRoomTypeChanging(value);
				this.SendPropertyChanging();
				this._RoomType = value;
				this.SendPropertyChanged("RoomType");
				this.OnRoomTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
	public System.Nullable<double> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNo", DbType="VarChar(255)")]
	public string RoomNo
	{
		get
		{
			return this._RoomNo;
		}
		set
		{
			if ((this._RoomNo != value))
			{
				this.OnRoomNoChanging(value);
				this.SendPropertyChanging();
				this._RoomNo = value;
				this.SendPropertyChanged("RoomNo");
				this.OnRoomNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_RoomBooking", Storage="_RoomBookings", ThisKey="RoomID", OtherKey="RoomID")]
	public EntitySet<RoomBooking> RoomBookings
	{
		get
		{
			return this._RoomBookings;
		}
		set
		{
			this._RoomBookings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_RoomBookings(RoomBooking entity)
	{
		this.SendPropertyChanging();
		entity.Room = this;
	}
	
	private void detach_RoomBookings(RoomBooking entity)
	{
		this.SendPropertyChanging();
		entity.Room = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvanceBillHalls")]
public partial class AdvanceBillHall : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ABillHallID;
	
	private System.Nullable<int> _BillID;
	
	private System.Nullable<int> _HallBookingID;
	
	private EntityRef<AdvanceBill> _AdvanceBill;
	
	private EntityRef<HallBooking> _HallBooking;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnABillHallIDChanging(int value);
    partial void OnABillHallIDChanged();
    partial void OnBillIDChanging(System.Nullable<int> value);
    partial void OnBillIDChanged();
    partial void OnHallBookingIDChanging(System.Nullable<int> value);
    partial void OnHallBookingIDChanged();
    #endregion
	
	public AdvanceBillHall()
	{
		this._AdvanceBill = default(EntityRef<AdvanceBill>);
		this._HallBooking = default(EntityRef<HallBooking>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABillHallID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ABillHallID
	{
		get
		{
			return this._ABillHallID;
		}
		set
		{
			if ((this._ABillHallID != value))
			{
				this.OnABillHallIDChanging(value);
				this.SendPropertyChanging();
				this._ABillHallID = value;
				this.SendPropertyChanged("ABillHallID");
				this.OnABillHallIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", DbType="Int")]
	public System.Nullable<int> BillID
	{
		get
		{
			return this._BillID;
		}
		set
		{
			if ((this._BillID != value))
			{
				if (this._AdvanceBill.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBillIDChanging(value);
				this.SendPropertyChanging();
				this._BillID = value;
				this.SendPropertyChanged("BillID");
				this.OnBillIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HallBookingID", DbType="Int")]
	public System.Nullable<int> HallBookingID
	{
		get
		{
			return this._HallBookingID;
		}
		set
		{
			if ((this._HallBookingID != value))
			{
				if (this._HallBooking.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnHallBookingIDChanging(value);
				this.SendPropertyChanging();
				this._HallBookingID = value;
				this.SendPropertyChanged("HallBookingID");
				this.OnHallBookingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvanceBill_AdvanceBillHall", Storage="_AdvanceBill", ThisKey="BillID", OtherKey="BillID", IsForeignKey=true)]
	public AdvanceBill AdvanceBill
	{
		get
		{
			return this._AdvanceBill.Entity;
		}
		set
		{
			AdvanceBill previousValue = this._AdvanceBill.Entity;
			if (((previousValue != value) 
						|| (this._AdvanceBill.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AdvanceBill.Entity = null;
					previousValue.AdvanceBillHalls.Remove(this);
				}
				this._AdvanceBill.Entity = value;
				if ((value != null))
				{
					value.AdvanceBillHalls.Add(this);
					this._BillID = value.BillID;
				}
				else
				{
					this._BillID = default(Nullable<int>);
				}
				this.SendPropertyChanged("AdvanceBill");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HallBooking_AdvanceBillHall", Storage="_HallBooking", ThisKey="HallBookingID", OtherKey="HallBookingID", IsForeignKey=true)]
	public HallBooking HallBooking
	{
		get
		{
			return this._HallBooking.Entity;
		}
		set
		{
			HallBooking previousValue = this._HallBooking.Entity;
			if (((previousValue != value) 
						|| (this._HallBooking.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HallBooking.Entity = null;
					previousValue.AdvanceBillHalls.Remove(this);
				}
				this._HallBooking.Entity = value;
				if ((value != null))
				{
					value.AdvanceBillHalls.Add(this);
					this._HallBookingID = value.HallBookingID;
				}
				else
				{
					this._HallBookingID = default(Nullable<int>);
				}
				this.SendPropertyChanged("HallBooking");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvanceBillRooms")]
public partial class AdvanceBillRoom : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ABillRoomID;
	
	private System.Nullable<int> _BillID;
	
	private System.Nullable<int> _RoomBookingID;
	
	private EntityRef<AdvanceBill> _AdvanceBill;
	
	private EntityRef<RoomBooking> _RoomBooking;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnABillRoomIDChanging(int value);
    partial void OnABillRoomIDChanged();
    partial void OnBillIDChanging(System.Nullable<int> value);
    partial void OnBillIDChanged();
    partial void OnRoomBookingIDChanging(System.Nullable<int> value);
    partial void OnRoomBookingIDChanged();
    #endregion
	
	public AdvanceBillRoom()
	{
		this._AdvanceBill = default(EntityRef<AdvanceBill>);
		this._RoomBooking = default(EntityRef<RoomBooking>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABillRoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ABillRoomID
	{
		get
		{
			return this._ABillRoomID;
		}
		set
		{
			if ((this._ABillRoomID != value))
			{
				this.OnABillRoomIDChanging(value);
				this.SendPropertyChanging();
				this._ABillRoomID = value;
				this.SendPropertyChanged("ABillRoomID");
				this.OnABillRoomIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", DbType="Int")]
	public System.Nullable<int> BillID
	{
		get
		{
			return this._BillID;
		}
		set
		{
			if ((this._BillID != value))
			{
				if (this._AdvanceBill.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBillIDChanging(value);
				this.SendPropertyChanging();
				this._BillID = value;
				this.SendPropertyChanged("BillID");
				this.OnBillIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomBookingID", DbType="Int")]
	public System.Nullable<int> RoomBookingID
	{
		get
		{
			return this._RoomBookingID;
		}
		set
		{
			if ((this._RoomBookingID != value))
			{
				if (this._RoomBooking.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoomBookingIDChanging(value);
				this.SendPropertyChanging();
				this._RoomBookingID = value;
				this.SendPropertyChanged("RoomBookingID");
				this.OnRoomBookingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvanceBill_AdvanceBillRoom", Storage="_AdvanceBill", ThisKey="BillID", OtherKey="BillID", IsForeignKey=true)]
	public AdvanceBill AdvanceBill
	{
		get
		{
			return this._AdvanceBill.Entity;
		}
		set
		{
			AdvanceBill previousValue = this._AdvanceBill.Entity;
			if (((previousValue != value) 
						|| (this._AdvanceBill.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AdvanceBill.Entity = null;
					previousValue.AdvanceBillRooms.Remove(this);
				}
				this._AdvanceBill.Entity = value;
				if ((value != null))
				{
					value.AdvanceBillRooms.Add(this);
					this._BillID = value.BillID;
				}
				else
				{
					this._BillID = default(Nullable<int>);
				}
				this.SendPropertyChanged("AdvanceBill");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomBooking_AdvanceBillRoom", Storage="_RoomBooking", ThisKey="RoomBookingID", OtherKey="BookingID", IsForeignKey=true)]
	public RoomBooking RoomBooking
	{
		get
		{
			return this._RoomBooking.Entity;
		}
		set
		{
			RoomBooking previousValue = this._RoomBooking.Entity;
			if (((previousValue != value) 
						|| (this._RoomBooking.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._RoomBooking.Entity = null;
					previousValue.AdvanceBillRooms.Remove(this);
				}
				this._RoomBooking.Entity = value;
				if ((value != null))
				{
					value.AdvanceBillRooms.Add(this);
					this._RoomBookingID = value.BookingID;
				}
				else
				{
					this._RoomBookingID = default(Nullable<int>);
				}
				this.SendPropertyChanged("RoomBooking");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _ContactNo;
	
	private string _NICno;
	
	private System.Nullable<System.DateTime> _DOB;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private string _uname;
	
	private string _pwd;
	
	private EntitySet<AdvanceBill> _AdvanceBills;
	
	private EntitySet<HallBooking> _HallBookings;
	
	private EntitySet<RoomBooking> _RoomBookings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnNICnoChanging(string value);
    partial void OnNICnoChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnunameChanging(string value);
    partial void OnunameChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    #endregion
	
	public Customer()
	{
		this._AdvanceBills = new EntitySet<AdvanceBill>(new Action<AdvanceBill>(this.attach_AdvanceBills), new Action<AdvanceBill>(this.detach_AdvanceBills));
		this._HallBookings = new EntitySet<HallBooking>(new Action<HallBooking>(this.attach_HallBookings), new Action<HallBooking>(this.detach_HallBookings));
		this._RoomBookings = new EntitySet<RoomBooking>(new Action<RoomBooking>(this.attach_RoomBookings), new Action<RoomBooking>(this.detach_RoomBookings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(255)")]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NICno", DbType="VarChar(255)")]
	public string NICno
	{
		get
		{
			return this._NICno;
		}
		set
		{
			if ((this._NICno != value))
			{
				this.OnNICnoChanging(value);
				this.SendPropertyChanging();
				this._NICno = value;
				this.SendPropertyChanged("NICno");
				this.OnNICnoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
	public System.Nullable<System.DateTime> DOB
	{
		get
		{
			return this._DOB;
		}
		set
		{
			if ((this._DOB != value))
			{
				this.OnDOBChanging(value);
				this.SendPropertyChanging();
				this._DOB = value;
				this.SendPropertyChanged("DOB");
				this.OnDOBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="Date")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uname", DbType="VarChar(255)")]
	public string uname
	{
		get
		{
			return this._uname;
		}
		set
		{
			if ((this._uname != value))
			{
				this.OnunameChanging(value);
				this.SendPropertyChanging();
				this._uname = value;
				this.SendPropertyChanged("uname");
				this.OnunameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(255)")]
	public string pwd
	{
		get
		{
			return this._pwd;
		}
		set
		{
			if ((this._pwd != value))
			{
				this.OnpwdChanging(value);
				this.SendPropertyChanging();
				this._pwd = value;
				this.SendPropertyChanged("pwd");
				this.OnpwdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_AdvanceBill", Storage="_AdvanceBills", ThisKey="CustomerID", OtherKey="CustID")]
	public EntitySet<AdvanceBill> AdvanceBills
	{
		get
		{
			return this._AdvanceBills;
		}
		set
		{
			this._AdvanceBills.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_HallBooking", Storage="_HallBookings", ThisKey="CustomerID", OtherKey="CustID")]
	public EntitySet<HallBooking> HallBookings
	{
		get
		{
			return this._HallBookings;
		}
		set
		{
			this._HallBookings.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_RoomBooking", Storage="_RoomBookings", ThisKey="CustomerID", OtherKey="CustID")]
	public EntitySet<RoomBooking> RoomBookings
	{
		get
		{
			return this._RoomBookings;
		}
		set
		{
			this._RoomBookings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AdvanceBills(AdvanceBill entity)
	{
		this.SendPropertyChanging();
		entity.Customer = this;
	}
	
	private void detach_AdvanceBills(AdvanceBill entity)
	{
		this.SendPropertyChanging();
		entity.Customer = null;
	}
	
	private void attach_HallBookings(HallBooking entity)
	{
		this.SendPropertyChanging();
		entity.Customer = this;
	}
	
	private void detach_HallBookings(HallBooking entity)
	{
		this.SendPropertyChanging();
		entity.Customer = null;
	}
	
	private void attach_RoomBookings(RoomBooking entity)
	{
		this.SendPropertyChanging();
		entity.Customer = this;
	}
	
	private void detach_RoomBookings(RoomBooking entity)
	{
		this.SendPropertyChanging();
		entity.Customer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinalBill")]
public partial class FinalBill : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FinalBillID;
	
	private System.Nullable<System.DateTime> _BillDate;
	
	private System.Nullable<int> _AdvanceBillID;
	
	private System.Nullable<double> _FinalAmount;
	
	private EntityRef<AdvanceBill> _AdvanceBill;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFinalBillIDChanging(int value);
    partial void OnFinalBillIDChanged();
    partial void OnBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateChanged();
    partial void OnAdvanceBillIDChanging(System.Nullable<int> value);
    partial void OnAdvanceBillIDChanged();
    partial void OnFinalAmountChanging(System.Nullable<double> value);
    partial void OnFinalAmountChanged();
    #endregion
	
	public FinalBill()
	{
		this._AdvanceBill = default(EntityRef<AdvanceBill>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalBillID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int FinalBillID
	{
		get
		{
			return this._FinalBillID;
		}
		set
		{
			if ((this._FinalBillID != value))
			{
				this.OnFinalBillIDChanging(value);
				this.SendPropertyChanging();
				this._FinalBillID = value;
				this.SendPropertyChanged("FinalBillID");
				this.OnFinalBillIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="Date")]
	public System.Nullable<System.DateTime> BillDate
	{
		get
		{
			return this._BillDate;
		}
		set
		{
			if ((this._BillDate != value))
			{
				this.OnBillDateChanging(value);
				this.SendPropertyChanging();
				this._BillDate = value;
				this.SendPropertyChanged("BillDate");
				this.OnBillDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceBillID", DbType="Int")]
	public System.Nullable<int> AdvanceBillID
	{
		get
		{
			return this._AdvanceBillID;
		}
		set
		{
			if ((this._AdvanceBillID != value))
			{
				if (this._AdvanceBill.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdvanceBillIDChanging(value);
				this.SendPropertyChanging();
				this._AdvanceBillID = value;
				this.SendPropertyChanged("AdvanceBillID");
				this.OnAdvanceBillIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalAmount", DbType="Float")]
	public System.Nullable<double> FinalAmount
	{
		get
		{
			return this._FinalAmount;
		}
		set
		{
			if ((this._FinalAmount != value))
			{
				this.OnFinalAmountChanging(value);
				this.SendPropertyChanging();
				this._FinalAmount = value;
				this.SendPropertyChanged("FinalAmount");
				this.OnFinalAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvanceBill_FinalBill", Storage="_AdvanceBill", ThisKey="AdvanceBillID", OtherKey="BillID", IsForeignKey=true)]
	public AdvanceBill AdvanceBill
	{
		get
		{
			return this._AdvanceBill.Entity;
		}
		set
		{
			AdvanceBill previousValue = this._AdvanceBill.Entity;
			if (((previousValue != value) 
						|| (this._AdvanceBill.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AdvanceBill.Entity = null;
					previousValue.FinalBills.Remove(this);
				}
				this._AdvanceBill.Entity = value;
				if ((value != null))
				{
					value.FinalBills.Add(this);
					this._AdvanceBillID = value.BillID;
				}
				else
				{
					this._AdvanceBillID = default(Nullable<int>);
				}
				this.SendPropertyChanged("AdvanceBill");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FunctionPack")]
public partial class FunctionPack : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FuncID;
	
	private string _FuncType;
	
	private string _FunctionName;
	
	private System.Nullable<double> _Price;
	
	private EntitySet<HallBooking> _HallBookings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFuncIDChanging(int value);
    partial void OnFuncIDChanged();
    partial void OnFuncTypeChanging(string value);
    partial void OnFuncTypeChanged();
    partial void OnFunctionNameChanging(string value);
    partial void OnFunctionNameChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    #endregion
	
	public FunctionPack()
	{
		this._HallBookings = new EntitySet<HallBooking>(new Action<HallBooking>(this.attach_HallBookings), new Action<HallBooking>(this.detach_HallBookings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuncID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int FuncID
	{
		get
		{
			return this._FuncID;
		}
		set
		{
			if ((this._FuncID != value))
			{
				this.OnFuncIDChanging(value);
				this.SendPropertyChanging();
				this._FuncID = value;
				this.SendPropertyChanged("FuncID");
				this.OnFuncIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuncType", DbType="VarChar(255)")]
	public string FuncType
	{
		get
		{
			return this._FuncType;
		}
		set
		{
			if ((this._FuncType != value))
			{
				this.OnFuncTypeChanging(value);
				this.SendPropertyChanging();
				this._FuncType = value;
				this.SendPropertyChanged("FuncType");
				this.OnFuncTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="VarChar(255)")]
	public string FunctionName
	{
		get
		{
			return this._FunctionName;
		}
		set
		{
			if ((this._FunctionName != value))
			{
				this.OnFunctionNameChanging(value);
				this.SendPropertyChanging();
				this._FunctionName = value;
				this.SendPropertyChanged("FunctionName");
				this.OnFunctionNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
	public System.Nullable<double> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FunctionPack_HallBooking", Storage="_HallBookings", ThisKey="FuncID", OtherKey="FunctionPack")]
	public EntitySet<HallBooking> HallBookings
	{
		get
		{
			return this._HallBookings;
		}
		set
		{
			this._HallBookings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HallBookings(HallBooking entity)
	{
		this.SendPropertyChanging();
		entity.FunctionPack1 = this;
	}
	
	private void detach_HallBookings(HallBooking entity)
	{
		this.SendPropertyChanging();
		entity.FunctionPack1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HallBooking")]
public partial class HallBooking : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _HallBookingID;
	
	private System.Nullable<int> _HallID;
	
	private string _BookTime;
	
	private System.Nullable<System.DateTime> _BookDate;
	
	private System.Nullable<int> _FunctionPack;
	
	private System.Nullable<int> _NoOfAtendees;
	
	private System.Nullable<int> _CustID;
	
	private System.Nullable<int> _MealPackID;
	
	private EntitySet<AdvanceBillHall> _AdvanceBillHalls;
	
	private EntityRef<Customer> _Customer;
	
	private EntityRef<FunctionPack> _FunctionPack1;
	
	private EntityRef<Hall> _Hall;
	
	private EntityRef<MealPackage> _MealPackage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHallBookingIDChanging(int value);
    partial void OnHallBookingIDChanged();
    partial void OnHallIDChanging(System.Nullable<int> value);
    partial void OnHallIDChanged();
    partial void OnBookTimeChanging(string value);
    partial void OnBookTimeChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    partial void OnFunctionPackChanging(System.Nullable<int> value);
    partial void OnFunctionPackChanged();
    partial void OnNoOfAtendeesChanging(System.Nullable<int> value);
    partial void OnNoOfAtendeesChanged();
    partial void OnCustIDChanging(System.Nullable<int> value);
    partial void OnCustIDChanged();
    partial void OnMealPackIDChanging(System.Nullable<int> value);
    partial void OnMealPackIDChanged();
    #endregion
	
	public HallBooking()
	{
		this._AdvanceBillHalls = new EntitySet<AdvanceBillHall>(new Action<AdvanceBillHall>(this.attach_AdvanceBillHalls), new Action<AdvanceBillHall>(this.detach_AdvanceBillHalls));
		this._Customer = default(EntityRef<Customer>);
		this._FunctionPack1 = default(EntityRef<FunctionPack>);
		this._Hall = default(EntityRef<Hall>);
		this._MealPackage = default(EntityRef<MealPackage>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HallBookingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int HallBookingID
	{
		get
		{
			return this._HallBookingID;
		}
		set
		{
			if ((this._HallBookingID != value))
			{
				this.OnHallBookingIDChanging(value);
				this.SendPropertyChanging();
				this._HallBookingID = value;
				this.SendPropertyChanged("HallBookingID");
				this.OnHallBookingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HallID", DbType="Int")]
	public System.Nullable<int> HallID
	{
		get
		{
			return this._HallID;
		}
		set
		{
			if ((this._HallID != value))
			{
				if (this._Hall.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnHallIDChanging(value);
				this.SendPropertyChanging();
				this._HallID = value;
				this.SendPropertyChanged("HallID");
				this.OnHallIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTime", DbType="VarChar(255)")]
	public string BookTime
	{
		get
		{
			return this._BookTime;
		}
		set
		{
			if ((this._BookTime != value))
			{
				this.OnBookTimeChanging(value);
				this.SendPropertyChanging();
				this._BookTime = value;
				this.SendPropertyChanged("BookTime");
				this.OnBookTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="Date")]
	public System.Nullable<System.DateTime> BookDate
	{
		get
		{
			return this._BookDate;
		}
		set
		{
			if ((this._BookDate != value))
			{
				this.OnBookDateChanging(value);
				this.SendPropertyChanging();
				this._BookDate = value;
				this.SendPropertyChanged("BookDate");
				this.OnBookDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionPack", DbType="Int")]
	public System.Nullable<int> FunctionPack
	{
		get
		{
			return this._FunctionPack;
		}
		set
		{
			if ((this._FunctionPack != value))
			{
				if (this._FunctionPack1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFunctionPackChanging(value);
				this.SendPropertyChanging();
				this._FunctionPack = value;
				this.SendPropertyChanged("FunctionPack");
				this.OnFunctionPackChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfAtendees", DbType="Int")]
	public System.Nullable<int> NoOfAtendees
	{
		get
		{
			return this._NoOfAtendees;
		}
		set
		{
			if ((this._NoOfAtendees != value))
			{
				this.OnNoOfAtendeesChanging(value);
				this.SendPropertyChanging();
				this._NoOfAtendees = value;
				this.SendPropertyChanged("NoOfAtendees");
				this.OnNoOfAtendeesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", DbType="Int")]
	public System.Nullable<int> CustID
	{
		get
		{
			return this._CustID;
		}
		set
		{
			if ((this._CustID != value))
			{
				if (this._Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustIDChanging(value);
				this.SendPropertyChanging();
				this._CustID = value;
				this.SendPropertyChanged("CustID");
				this.OnCustIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealPackID", DbType="Int")]
	public System.Nullable<int> MealPackID
	{
		get
		{
			return this._MealPackID;
		}
		set
		{
			if ((this._MealPackID != value))
			{
				if (this._MealPackage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMealPackIDChanging(value);
				this.SendPropertyChanging();
				this._MealPackID = value;
				this.SendPropertyChanged("MealPackID");
				this.OnMealPackIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HallBooking_AdvanceBillHall", Storage="_AdvanceBillHalls", ThisKey="HallBookingID", OtherKey="HallBookingID")]
	public EntitySet<AdvanceBillHall> AdvanceBillHalls
	{
		get
		{
			return this._AdvanceBillHalls;
		}
		set
		{
			this._AdvanceBillHalls.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_HallBooking", Storage="_Customer", ThisKey="CustID", OtherKey="CustomerID", IsForeignKey=true)]
	public Customer Customer
	{
		get
		{
			return this._Customer.Entity;
		}
		set
		{
			Customer previousValue = this._Customer.Entity;
			if (((previousValue != value) 
						|| (this._Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Customer.Entity = null;
					previousValue.HallBookings.Remove(this);
				}
				this._Customer.Entity = value;
				if ((value != null))
				{
					value.HallBookings.Add(this);
					this._CustID = value.CustomerID;
				}
				else
				{
					this._CustID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Customer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FunctionPack_HallBooking", Storage="_FunctionPack1", ThisKey="FunctionPack", OtherKey="FuncID", IsForeignKey=true)]
	public FunctionPack FunctionPack1
	{
		get
		{
			return this._FunctionPack1.Entity;
		}
		set
		{
			FunctionPack previousValue = this._FunctionPack1.Entity;
			if (((previousValue != value) 
						|| (this._FunctionPack1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FunctionPack1.Entity = null;
					previousValue.HallBookings.Remove(this);
				}
				this._FunctionPack1.Entity = value;
				if ((value != null))
				{
					value.HallBookings.Add(this);
					this._FunctionPack = value.FuncID;
				}
				else
				{
					this._FunctionPack = default(Nullable<int>);
				}
				this.SendPropertyChanged("FunctionPack1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hall_HallBooking", Storage="_Hall", ThisKey="HallID", OtherKey="HallID", IsForeignKey=true)]
	public Hall Hall
	{
		get
		{
			return this._Hall.Entity;
		}
		set
		{
			Hall previousValue = this._Hall.Entity;
			if (((previousValue != value) 
						|| (this._Hall.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Hall.Entity = null;
					previousValue.HallBookings.Remove(this);
				}
				this._Hall.Entity = value;
				if ((value != null))
				{
					value.HallBookings.Add(this);
					this._HallID = value.HallID;
				}
				else
				{
					this._HallID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Hall");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MealPackage_HallBooking", Storage="_MealPackage", ThisKey="MealPackID", OtherKey="MealID", IsForeignKey=true)]
	public MealPackage MealPackage
	{
		get
		{
			return this._MealPackage.Entity;
		}
		set
		{
			MealPackage previousValue = this._MealPackage.Entity;
			if (((previousValue != value) 
						|| (this._MealPackage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MealPackage.Entity = null;
					previousValue.HallBookings.Remove(this);
				}
				this._MealPackage.Entity = value;
				if ((value != null))
				{
					value.HallBookings.Add(this);
					this._MealPackID = value.MealID;
				}
				else
				{
					this._MealPackID = default(Nullable<int>);
				}
				this.SendPropertyChanged("MealPackage");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AdvanceBillHalls(AdvanceBillHall entity)
	{
		this.SendPropertyChanging();
		entity.HallBooking = this;
	}
	
	private void detach_AdvanceBillHalls(AdvanceBillHall entity)
	{
		this.SendPropertyChanging();
		entity.HallBooking = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Halls")]
public partial class Hall : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _HallID;
	
	private System.Nullable<int> _Capacity;
	
	private string _HallNo;
	
	private System.Nullable<double> _PriceMorn;
	
	private System.Nullable<double> _PriceEven;
	
	private System.Nullable<double> _PriceNight;
	
	private System.Nullable<double> _PricePerPerson;
	
	private EntitySet<HallBooking> _HallBookings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHallIDChanging(int value);
    partial void OnHallIDChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnHallNoChanging(string value);
    partial void OnHallNoChanged();
    partial void OnPriceMornChanging(System.Nullable<double> value);
    partial void OnPriceMornChanged();
    partial void OnPriceEvenChanging(System.Nullable<double> value);
    partial void OnPriceEvenChanged();
    partial void OnPriceNightChanging(System.Nullable<double> value);
    partial void OnPriceNightChanged();
    partial void OnPricePerPersonChanging(System.Nullable<double> value);
    partial void OnPricePerPersonChanged();
    #endregion
	
	public Hall()
	{
		this._HallBookings = new EntitySet<HallBooking>(new Action<HallBooking>(this.attach_HallBookings), new Action<HallBooking>(this.detach_HallBookings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HallID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int HallID
	{
		get
		{
			return this._HallID;
		}
		set
		{
			if ((this._HallID != value))
			{
				this.OnHallIDChanging(value);
				this.SendPropertyChanging();
				this._HallID = value;
				this.SendPropertyChanged("HallID");
				this.OnHallIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
	public System.Nullable<int> Capacity
	{
		get
		{
			return this._Capacity;
		}
		set
		{
			if ((this._Capacity != value))
			{
				this.OnCapacityChanging(value);
				this.SendPropertyChanging();
				this._Capacity = value;
				this.SendPropertyChanged("Capacity");
				this.OnCapacityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HallNo", DbType="VarChar(255)")]
	public string HallNo
	{
		get
		{
			return this._HallNo;
		}
		set
		{
			if ((this._HallNo != value))
			{
				this.OnHallNoChanging(value);
				this.SendPropertyChanging();
				this._HallNo = value;
				this.SendPropertyChanged("HallNo");
				this.OnHallNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceMorn", DbType="Float")]
	public System.Nullable<double> PriceMorn
	{
		get
		{
			return this._PriceMorn;
		}
		set
		{
			if ((this._PriceMorn != value))
			{
				this.OnPriceMornChanging(value);
				this.SendPropertyChanging();
				this._PriceMorn = value;
				this.SendPropertyChanged("PriceMorn");
				this.OnPriceMornChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceEven", DbType="Float")]
	public System.Nullable<double> PriceEven
	{
		get
		{
			return this._PriceEven;
		}
		set
		{
			if ((this._PriceEven != value))
			{
				this.OnPriceEvenChanging(value);
				this.SendPropertyChanging();
				this._PriceEven = value;
				this.SendPropertyChanged("PriceEven");
				this.OnPriceEvenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceNight", DbType="Float")]
	public System.Nullable<double> PriceNight
	{
		get
		{
			return this._PriceNight;
		}
		set
		{
			if ((this._PriceNight != value))
			{
				this.OnPriceNightChanging(value);
				this.SendPropertyChanging();
				this._PriceNight = value;
				this.SendPropertyChanged("PriceNight");
				this.OnPriceNightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerPerson", DbType="Float")]
	public System.Nullable<double> PricePerPerson
	{
		get
		{
			return this._PricePerPerson;
		}
		set
		{
			if ((this._PricePerPerson != value))
			{
				this.OnPricePerPersonChanging(value);
				this.SendPropertyChanging();
				this._PricePerPerson = value;
				this.SendPropertyChanged("PricePerPerson");
				this.OnPricePerPersonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hall_HallBooking", Storage="_HallBookings", ThisKey="HallID", OtherKey="HallID")]
	public EntitySet<HallBooking> HallBookings
	{
		get
		{
			return this._HallBookings;
		}
		set
		{
			this._HallBookings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HallBookings(HallBooking entity)
	{
		this.SendPropertyChanging();
		entity.Hall = this;
	}
	
	private void detach_HallBookings(HallBooking entity)
	{
		this.SendPropertyChanging();
		entity.Hall = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MealPackage")]
public partial class MealPackage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MealID;
	
	private System.Nullable<double> _UnitPrice;
	
	private string _MealName;
	
	private string _MealDescription;
	
	private EntitySet<HallBooking> _HallBookings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMealIDChanging(int value);
    partial void OnMealIDChanged();
    partial void OnUnitPriceChanging(System.Nullable<double> value);
    partial void OnUnitPriceChanged();
    partial void OnMealNameChanging(string value);
    partial void OnMealNameChanged();
    partial void OnMealDescriptionChanging(string value);
    partial void OnMealDescriptionChanged();
    #endregion
	
	public MealPackage()
	{
		this._HallBookings = new EntitySet<HallBooking>(new Action<HallBooking>(this.attach_HallBookings), new Action<HallBooking>(this.detach_HallBookings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MealID
	{
		get
		{
			return this._MealID;
		}
		set
		{
			if ((this._MealID != value))
			{
				this.OnMealIDChanging(value);
				this.SendPropertyChanging();
				this._MealID = value;
				this.SendPropertyChanged("MealID");
				this.OnMealIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float")]
	public System.Nullable<double> UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealName", DbType="VarChar(255)")]
	public string MealName
	{
		get
		{
			return this._MealName;
		}
		set
		{
			if ((this._MealName != value))
			{
				this.OnMealNameChanging(value);
				this.SendPropertyChanging();
				this._MealName = value;
				this.SendPropertyChanged("MealName");
				this.OnMealNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealDescription", DbType="VarChar(255)")]
	public string MealDescription
	{
		get
		{
			return this._MealDescription;
		}
		set
		{
			if ((this._MealDescription != value))
			{
				this.OnMealDescriptionChanging(value);
				this.SendPropertyChanging();
				this._MealDescription = value;
				this.SendPropertyChanged("MealDescription");
				this.OnMealDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MealPackage_HallBooking", Storage="_HallBookings", ThisKey="MealID", OtherKey="MealPackID")]
	public EntitySet<HallBooking> HallBookings
	{
		get
		{
			return this._HallBookings;
		}
		set
		{
			this._HallBookings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HallBookings(HallBooking entity)
	{
		this.SendPropertyChanging();
		entity.MealPackage = this;
	}
	
	private void detach_HallBookings(HallBooking entity)
	{
		this.SendPropertyChanging();
		entity.MealPackage = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomBooking")]
public partial class RoomBooking : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BookingID;
	
	private System.Nullable<System.DateTime> _BookFrom;
	
	private System.Nullable<System.DateTime> _BookTo;
	
	private System.Nullable<int> _CustID;
	
	private System.Nullable<int> _NoPersons;
	
	private System.Nullable<System.DateTime> _BookDate;
	
	private System.Nullable<int> _RoomID;
	
	private EntitySet<AdvanceBillRoom> _AdvanceBillRooms;
	
	private EntityRef<Customer> _Customer;
	
	private EntityRef<Room> _Room;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingIDChanging(int value);
    partial void OnBookingIDChanged();
    partial void OnBookFromChanging(System.Nullable<System.DateTime> value);
    partial void OnBookFromChanged();
    partial void OnBookToChanging(System.Nullable<System.DateTime> value);
    partial void OnBookToChanged();
    partial void OnCustIDChanging(System.Nullable<int> value);
    partial void OnCustIDChanged();
    partial void OnNoPersonsChanging(System.Nullable<int> value);
    partial void OnNoPersonsChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    partial void OnRoomIDChanging(System.Nullable<int> value);
    partial void OnRoomIDChanged();
    #endregion
	
	public RoomBooking()
	{
		this._AdvanceBillRooms = new EntitySet<AdvanceBillRoom>(new Action<AdvanceBillRoom>(this.attach_AdvanceBillRooms), new Action<AdvanceBillRoom>(this.detach_AdvanceBillRooms));
		this._Customer = default(EntityRef<Customer>);
		this._Room = default(EntityRef<Room>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BookingID
	{
		get
		{
			return this._BookingID;
		}
		set
		{
			if ((this._BookingID != value))
			{
				this.OnBookingIDChanging(value);
				this.SendPropertyChanging();
				this._BookingID = value;
				this.SendPropertyChanged("BookingID");
				this.OnBookingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookFrom", DbType="Date")]
	public System.Nullable<System.DateTime> BookFrom
	{
		get
		{
			return this._BookFrom;
		}
		set
		{
			if ((this._BookFrom != value))
			{
				this.OnBookFromChanging(value);
				this.SendPropertyChanging();
				this._BookFrom = value;
				this.SendPropertyChanged("BookFrom");
				this.OnBookFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTo", DbType="Date")]
	public System.Nullable<System.DateTime> BookTo
	{
		get
		{
			return this._BookTo;
		}
		set
		{
			if ((this._BookTo != value))
			{
				this.OnBookToChanging(value);
				this.SendPropertyChanging();
				this._BookTo = value;
				this.SendPropertyChanged("BookTo");
				this.OnBookToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", DbType="Int")]
	public System.Nullable<int> CustID
	{
		get
		{
			return this._CustID;
		}
		set
		{
			if ((this._CustID != value))
			{
				if (this._Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustIDChanging(value);
				this.SendPropertyChanging();
				this._CustID = value;
				this.SendPropertyChanged("CustID");
				this.OnCustIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoPersons", DbType="Int")]
	public System.Nullable<int> NoPersons
	{
		get
		{
			return this._NoPersons;
		}
		set
		{
			if ((this._NoPersons != value))
			{
				this.OnNoPersonsChanging(value);
				this.SendPropertyChanging();
				this._NoPersons = value;
				this.SendPropertyChanged("NoPersons");
				this.OnNoPersonsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="Date")]
	public System.Nullable<System.DateTime> BookDate
	{
		get
		{
			return this._BookDate;
		}
		set
		{
			if ((this._BookDate != value))
			{
				this.OnBookDateChanging(value);
				this.SendPropertyChanging();
				this._BookDate = value;
				this.SendPropertyChanged("BookDate");
				this.OnBookDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int")]
	public System.Nullable<int> RoomID
	{
		get
		{
			return this._RoomID;
		}
		set
		{
			if ((this._RoomID != value))
			{
				if (this._Room.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoomIDChanging(value);
				this.SendPropertyChanging();
				this._RoomID = value;
				this.SendPropertyChanged("RoomID");
				this.OnRoomIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomBooking_AdvanceBillRoom", Storage="_AdvanceBillRooms", ThisKey="BookingID", OtherKey="RoomBookingID")]
	public EntitySet<AdvanceBillRoom> AdvanceBillRooms
	{
		get
		{
			return this._AdvanceBillRooms;
		}
		set
		{
			this._AdvanceBillRooms.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_RoomBooking", Storage="_Customer", ThisKey="CustID", OtherKey="CustomerID", IsForeignKey=true)]
	public Customer Customer
	{
		get
		{
			return this._Customer.Entity;
		}
		set
		{
			Customer previousValue = this._Customer.Entity;
			if (((previousValue != value) 
						|| (this._Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Customer.Entity = null;
					previousValue.RoomBookings.Remove(this);
				}
				this._Customer.Entity = value;
				if ((value != null))
				{
					value.RoomBookings.Add(this);
					this._CustID = value.CustomerID;
				}
				else
				{
					this._CustID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Customer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_RoomBooking", Storage="_Room", ThisKey="RoomID", OtherKey="RoomID", IsForeignKey=true)]
	public Room Room
	{
		get
		{
			return this._Room.Entity;
		}
		set
		{
			Room previousValue = this._Room.Entity;
			if (((previousValue != value) 
						|| (this._Room.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Room.Entity = null;
					previousValue.RoomBookings.Remove(this);
				}
				this._Room.Entity = value;
				if ((value != null))
				{
					value.RoomBookings.Add(this);
					this._RoomID = value.RoomID;
				}
				else
				{
					this._RoomID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Room");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AdvanceBillRooms(AdvanceBillRoom entity)
	{
		this.SendPropertyChanging();
		entity.RoomBooking = this;
	}
	
	private void detach_AdvanceBillRooms(AdvanceBillRoom entity)
	{
		this.SendPropertyChanging();
		entity.RoomBooking = null;
	}
}
#pragma warning restore 1591
